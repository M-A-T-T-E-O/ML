{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4a0c298a-6b4a-4ced-8a2a-1e29e4eee758",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Please insert the size of input (Layer 0) : 1\n",
      "Please insert the size of output (Layer 0) : 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "A priori conditions:\n",
      "------------------------------\n",
      "The output from linear model is correct\n",
      "------------------------------\n",
      "The output from ReLU is correct\n",
      "------------------------------\n",
      "The output from convex combination is correct\n",
      "\n",
      "Model parameters:\n",
      "------------------------------\n",
      "The x (data):  tensor([0.0290])\n",
      "------------------------------\n",
      "The w (weight):  tensor([[-0.1962],\n",
      "        [-0.4803],\n",
      "        [-0.2667],\n",
      "        [-0.8834]])\n",
      "------------------------------\n",
      "The b (bias):  tensor([ 0.4013, -0.8964, -0.0637,  0.3476])\n",
      "\n",
      "First level output:\n",
      "------------------------------\n",
      "The y_1 (output from lin. model): tensor([ 0.3956, -0.9103, -0.0715,  0.3220])\n",
      "\n",
      "Second level output:\n",
      "------------------------------\n",
      "The y_2 (output from ReLU): tensor([0.3956, 0.0000, 0.0000, 0.3220])\n",
      "\n",
      "Third level output:\n",
      "------------------------------\n",
      "The y_3 (output from convex combination): tensor([0.2209, 0.3000, 0.3000, 0.2356])\n",
      "\n",
      "----------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "My Neural Network is: input -> Layer 0 ->  output\n",
      "\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Do you want to add a new Layer? (type y (yes) or n (no)?) y\n",
      "Please insert the size of input (Layer 1) : 4\n",
      "Please insert the size of output (Layer 1) : 1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "A priori conditions:\n",
      "------------------------------\n",
      "The output from linear model is correct\n",
      "------------------------------\n",
      "The output from ReLU is correct\n",
      "------------------------------\n",
      "The output from convex combination is correct\n",
      "\n",
      "Model parameters:\n",
      "------------------------------\n",
      "The x (data):  tensor([0.2209, 0.3000, 0.3000, 0.2356])\n",
      "------------------------------\n",
      "The w (weight):  tensor([[-0.1685,  0.2837,  0.0631,  0.2749]])\n",
      "------------------------------\n",
      "The b (bias):  tensor([0.3208])\n",
      "\n",
      "First level output:\n",
      "------------------------------\n",
      "The y_1 (output from lin. model): tensor([0.4524])\n",
      "\n",
      "Second level output:\n",
      "------------------------------\n",
      "The y_2 (output from ReLU): tensor([0.4524])\n",
      "\n",
      "Third level output:\n",
      "------------------------------\n",
      "The y_3 (output from convex combination): tensor([0.2095])\n",
      "\n",
      "----------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "My Neural Network is: input -> Layer 0 -> Layer 1 ->  output\n",
      "\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Do you want to add a new Layer? (type y (yes) or n (no)?) n\n"
     ]
    }
   ],
   "source": [
    "run main.py"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "df7bde1c-9bbc-41b3-aac1-e8c5632a93f3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The U is: tensor([[63.],\n",
      "        [42.],\n",
      "        [96.],\n",
      "        [48.],\n",
      "        [42.],\n",
      "        [82.],\n",
      "        [98.],\n",
      "        [32.],\n",
      "        [80.],\n",
      "        [24.],\n",
      "        [49.],\n",
      "        [32.],\n",
      "        [81.],\n",
      "        [19.],\n",
      "        [ 2.],\n",
      "        [62.],\n",
      "        [79.],\n",
      "        [34.],\n",
      "        [44.],\n",
      "        [27.],\n",
      "        [52.],\n",
      "        [65.],\n",
      "        [58.],\n",
      "        [ 6.],\n",
      "        [66.],\n",
      "        [67.],\n",
      "        [51.],\n",
      "        [15.],\n",
      "        [32.],\n",
      "        [61.],\n",
      "        [47.],\n",
      "        [24.],\n",
      "        [43.],\n",
      "        [90.],\n",
      "        [27.],\n",
      "        [16.],\n",
      "        [ 9.],\n",
      "        [23.],\n",
      "        [83.],\n",
      "        [39.],\n",
      "        [70.],\n",
      "        [81.],\n",
      "        [82.],\n",
      "        [59.],\n",
      "        [27.],\n",
      "        [88.],\n",
      "        [ 6.],\n",
      "        [ 3.],\n",
      "        [74.],\n",
      "        [ 8.],\n",
      "        [ 5.],\n",
      "        [51.],\n",
      "        [ 5.],\n",
      "        [36.],\n",
      "        [24.],\n",
      "        [72.],\n",
      "        [69.],\n",
      "        [33.],\n",
      "        [45.],\n",
      "        [79.],\n",
      "        [97.],\n",
      "        [59.],\n",
      "        [89.],\n",
      "        [84.],\n",
      "        [29.],\n",
      "        [88.],\n",
      "        [37.],\n",
      "        [24.],\n",
      "        [85.],\n",
      "        [52.],\n",
      "        [68.],\n",
      "        [88.],\n",
      "        [58.],\n",
      "        [68.],\n",
      "        [74.],\n",
      "        [ 4.],\n",
      "        [22.],\n",
      "        [83.],\n",
      "        [39.],\n",
      "        [81.],\n",
      "        [22.],\n",
      "        [37.],\n",
      "        [82.],\n",
      "        [58.],\n",
      "        [85.],\n",
      "        [37.],\n",
      "        [38.],\n",
      "        [19.],\n",
      "        [92.],\n",
      "        [59.],\n",
      "        [33.],\n",
      "        [54.],\n",
      "        [39.],\n",
      "        [82.],\n",
      "        [56.],\n",
      "        [62.],\n",
      "        [67.],\n",
      "        [99.],\n",
      "        [98.],\n",
      "        [42.]])\n",
      "\n",
      "Each output is calculated in maximum 3 steps as follows:\n",
      "\n",
      "y0 = Ax + B\n",
      "\n",
      "y1 = ReLU(y0)\n",
      "\n",
      "y2 = (1 - y1)*f(x) + y1*g(x)\n",
      "\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "What output do you want to take for the tuning of parameters (type 0 (y0) or 1 (y1) or 2 (y2))?\n",
      " 1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "The error (every 250 steps):\n",
      "tensor(86191.4922, grad_fn=<MseLossBackward0>)\n",
      "tensor(85516.1094, grad_fn=<MseLossBackward0>)\n",
      "tensor(84847.4531, grad_fn=<MseLossBackward0>)\n",
      "tensor(84185.4531, grad_fn=<MseLossBackward0>)\n",
      "tensor(83530.0312, grad_fn=<MseLossBackward0>)\n",
      "tensor(82881.1328, grad_fn=<MseLossBackward0>)\n",
      "tensor(82238.6875, grad_fn=<MseLossBackward0>)\n",
      "tensor(81602.6406, grad_fn=<MseLossBackward0>)\n",
      "tensor(80972.9219, grad_fn=<MseLossBackward0>)\n",
      "tensor(80349.4766, grad_fn=<MseLossBackward0>)\n",
      "tensor(79732.2266, grad_fn=<MseLossBackward0>)\n",
      "tensor(79121.1172, grad_fn=<MseLossBackward0>)\n",
      "tensor(78516.0938, grad_fn=<MseLossBackward0>)\n",
      "tensor(77917.0781, grad_fn=<MseLossBackward0>)\n",
      "tensor(77324.0312, grad_fn=<MseLossBackward0>)\n",
      "tensor(76736.8906, grad_fn=<MseLossBackward0>)\n",
      "tensor(76155.5938, grad_fn=<MseLossBackward0>)\n",
      "tensor(75580.0703, grad_fn=<MseLossBackward0>)\n",
      "tensor(75010.2812, grad_fn=<MseLossBackward0>)\n",
      "tensor(74446.1484, grad_fn=<MseLossBackward0>)\n",
      "tensor(73887.6406, grad_fn=<MseLossBackward0>)\n",
      "tensor(73334.6875, grad_fn=<MseLossBackward0>)\n",
      "tensor(72787.2422, grad_fn=<MseLossBackward0>)\n",
      "tensor(72245.2422, grad_fn=<MseLossBackward0>)\n",
      "tensor(71708.6172, grad_fn=<MseLossBackward0>)\n",
      "tensor(71177.3516, grad_fn=<MseLossBackward0>)\n",
      "tensor(70651.3672, grad_fn=<MseLossBackward0>)\n",
      "tensor(70130.6172, grad_fn=<MseLossBackward0>)\n",
      "tensor(69615.0469, grad_fn=<MseLossBackward0>)\n",
      "tensor(69104.6172, grad_fn=<MseLossBackward0>)\n",
      "tensor(68599.2500, grad_fn=<MseLossBackward0>)\n",
      "tensor(68098.9297, grad_fn=<MseLossBackward0>)\n",
      "tensor(67603.5781, grad_fn=<MseLossBackward0>)\n",
      "tensor(67113.1562, grad_fn=<MseLossBackward0>)\n",
      "tensor(66627.6016, grad_fn=<MseLossBackward0>)\n",
      "tensor(66146.8906, grad_fn=<MseLossBackward0>)\n",
      "tensor(65670.9688, grad_fn=<MseLossBackward0>)\n",
      "tensor(65199.7695, grad_fn=<MseLossBackward0>)\n",
      "tensor(64733.2539, grad_fn=<MseLossBackward0>)\n",
      "tensor(64271.4062, grad_fn=<MseLossBackward0>)\n",
      "tensor(63814.1250, grad_fn=<MseLossBackward0>)\n",
      "tensor(63361.4102, grad_fn=<MseLossBackward0>)\n",
      "tensor(62913.2031, grad_fn=<MseLossBackward0>)\n",
      "tensor(62469.4414, grad_fn=<MseLossBackward0>)\n",
      "tensor(62030.1055, grad_fn=<MseLossBackward0>)\n",
      "tensor(61595.1406, grad_fn=<MseLossBackward0>)\n",
      "tensor(61164.5000, grad_fn=<MseLossBackward0>)\n",
      "tensor(60738.1484, grad_fn=<MseLossBackward0>)\n",
      "tensor(60316.0234, grad_fn=<MseLossBackward0>)\n",
      "tensor(59898.1211, grad_fn=<MseLossBackward0>)\n",
      "tensor(59484.3711, grad_fn=<MseLossBackward0>)\n",
      "tensor(59074.7188, grad_fn=<MseLossBackward0>)\n",
      "tensor(58669.1719, grad_fn=<MseLossBackward0>)\n",
      "tensor(58267.6406, grad_fn=<MseLossBackward0>)\n",
      "tensor(57870.1133, grad_fn=<MseLossBackward0>)\n",
      "tensor(57476.5312, grad_fn=<MseLossBackward0>)\n",
      "tensor(57086.8750, grad_fn=<MseLossBackward0>)\n",
      "tensor(56701.0703, grad_fn=<MseLossBackward0>)\n",
      "tensor(56319.1484, grad_fn=<MseLossBackward0>)\n",
      "tensor(55940.9766, grad_fn=<MseLossBackward0>)\n",
      "tensor(55566.6367, grad_fn=<MseLossBackward0>)\n",
      "tensor(55195.9492, grad_fn=<MseLossBackward0>)\n",
      "tensor(54829.0156, grad_fn=<MseLossBackward0>)\n",
      "tensor(54465.6719, grad_fn=<MseLossBackward0>)\n",
      "tensor(54105.9883, grad_fn=<MseLossBackward0>)\n",
      "tensor(53749.8438, grad_fn=<MseLossBackward0>)\n",
      "tensor(53397.3008, grad_fn=<MseLossBackward0>)\n",
      "tensor(53048.1992, grad_fn=<MseLossBackward0>)\n",
      "tensor(52702.6250, grad_fn=<MseLossBackward0>)\n",
      "tensor(52360.4688, grad_fn=<MseLossBackward0>)\n",
      "tensor(52021.7148, grad_fn=<MseLossBackward0>)\n",
      "tensor(51686.3438, grad_fn=<MseLossBackward0>)\n",
      "tensor(51354.2695, grad_fn=<MseLossBackward0>)\n",
      "tensor(51025.5586, grad_fn=<MseLossBackward0>)\n",
      "tensor(50700.0859, grad_fn=<MseLossBackward0>)\n",
      "tensor(50377.8281, grad_fn=<MseLossBackward0>)\n",
      "tensor(50058.8281, grad_fn=<MseLossBackward0>)\n",
      "tensor(49742.9766, grad_fn=<MseLossBackward0>)\n",
      "tensor(49430.2539, grad_fn=<MseLossBackward0>)\n",
      "tensor(49120.6797, grad_fn=<MseLossBackward0>)\n",
      "\n",
      "The output of the NN (post tuning) is:\n",
      " tensor([[86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.1855],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093],\n",
      "        [86.2093]]) \n",
      " The target output (from measurements) is:\n",
      " tensor([[315.],\n",
      "        [210.],\n",
      "        [480.],\n",
      "        [240.],\n",
      "        [210.],\n",
      "        [410.],\n",
      "        [490.],\n",
      "        [160.],\n",
      "        [400.],\n",
      "        [120.],\n",
      "        [245.],\n",
      "        [160.],\n",
      "        [405.],\n",
      "        [ 95.],\n",
      "        [ 10.],\n",
      "        [310.],\n",
      "        [395.],\n",
      "        [170.],\n",
      "        [220.],\n",
      "        [135.],\n",
      "        [260.],\n",
      "        [325.],\n",
      "        [290.],\n",
      "        [ 30.],\n",
      "        [330.],\n",
      "        [335.],\n",
      "        [255.],\n",
      "        [ 75.],\n",
      "        [160.],\n",
      "        [305.],\n",
      "        [235.],\n",
      "        [120.],\n",
      "        [215.],\n",
      "        [450.],\n",
      "        [135.],\n",
      "        [ 80.],\n",
      "        [ 45.],\n",
      "        [115.],\n",
      "        [415.],\n",
      "        [195.],\n",
      "        [350.],\n",
      "        [405.],\n",
      "        [410.],\n",
      "        [295.],\n",
      "        [135.],\n",
      "        [440.],\n",
      "        [ 30.],\n",
      "        [ 15.],\n",
      "        [370.],\n",
      "        [ 40.],\n",
      "        [ 25.],\n",
      "        [255.],\n",
      "        [ 25.],\n",
      "        [180.],\n",
      "        [120.],\n",
      "        [360.],\n",
      "        [345.],\n",
      "        [165.],\n",
      "        [225.],\n",
      "        [395.],\n",
      "        [485.],\n",
      "        [295.],\n",
      "        [445.],\n",
      "        [420.],\n",
      "        [145.],\n",
      "        [440.],\n",
      "        [185.],\n",
      "        [120.],\n",
      "        [425.],\n",
      "        [260.],\n",
      "        [340.],\n",
      "        [440.],\n",
      "        [290.],\n",
      "        [340.],\n",
      "        [370.],\n",
      "        [ 20.],\n",
      "        [110.],\n",
      "        [415.],\n",
      "        [195.],\n",
      "        [405.],\n",
      "        [110.],\n",
      "        [185.],\n",
      "        [410.],\n",
      "        [290.],\n",
      "        [425.],\n",
      "        [185.],\n",
      "        [190.],\n",
      "        [ 95.],\n",
      "        [460.],\n",
      "        [295.],\n",
      "        [165.],\n",
      "        [270.],\n",
      "        [195.],\n",
      "        [410.],\n",
      "        [280.],\n",
      "        [310.],\n",
      "        [335.],\n",
      "        [495.],\n",
      "        [490.],\n",
      "        [210.]])\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "trainingNN(layer_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48143773-fce6-4d5e-9699-f29688477c47",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
